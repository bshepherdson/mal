\ Some top-level variables etc. that are referenced from many places.
CREATE print-buffer 64 1024 * allot
VARIABLE >prn

multi (pr-str)

VARIABLE print-readably?

\ Like EMIT; a pun on "prnch".
: pinch    ( ch -- ) >prn @ c!   1 chars >prn +! ;
\ Raw string print.
: prn-type ( c-addr u -- ) 0 ?DO dup c@ pinch   char+ LOOP drop ;

: prn0 ( -- ) print-buffer >prn ! ;
: prn>str ( -- c-addr u ) print-buffer >prn @ over - ;

: pr-str ( value -- c-addr u ) prn0 (pr-str) prn>str ;

: pspace  ( -- ) 32 pinch ;
: pspaces ( u -- ) 0 ?DO pspace LOOP ;


:noname drop S" nil"         prn-type ; %nil      method-of (pr-str)

\ Prints Forth values on the data stack, to the given depth.
: pr.s ( depth-max -- )
  depth 1- min   [char] < dup 0 .R [char] >
  1- 0 swap DO 2 spaces   i pick pr-str type   -1 +LOOP ;

