REQUIRE types.ft
REQUIRE meta.ft
REQUIRE printer.ft
REQUIRE vectors.ft
REQUIRE lists.ft
REQUIRE strings.ft
REQUIRE numbers.ft
REQUIRE reader.ft
REQUIRE errors.ft

\ REPL =======================================================================
: READ  ( c-addr u -- form )     read-str-raw ;
: EVAL  ( form     -- form )     ;
: PRINT ( form     -- c-addr u ) pr-str ;
: rep ( c-addr u -- c-addr u ) READ EVAL PRINT ;

\ Main loop ==================================================================
\ Gforth's ACCEPT outputs an extra space which breaks Mal's test scripts
\ : mal-accept ( c-addr u -- +n )
\   drop dup >R
\   BEGIN
\     key
\     dup  4 = IF drop R> 2drop 0 EXIT THEN \ Return 0 if we got EOF (even if we parsed)
\     dup 13 = IF drop R> - EXIT THEN
\     dup emit
\     over c!   char+
\   AGAIN ;
CREATE input 256 chars allot align

: mal-accept ( c-addr u -- +n good? ) stdin read-line throw ;

: main ( -- )
  BEGIN
    ." user> "   input 255 mal-accept
  WHILE ( len )
    input swap   ['] rep catch   ?dup IF error. ELSE type THEN cr
  REPEAT ;

main bye
